@use "nhsuk-frontend/dist/nhsuk/core/settings" as *;
@use "nhsuk-frontend/dist/nhsuk/core/tools" as *;
@use "nhsuk-frontend/dist/nhsuk/core/helpers" as *;

// app/assets/sass/components/_reading.scss

.app-status-bar {
  background-color: nhsuk-shade($nhsuk-brand-colour, 40%);
  color: $nhsuk-reverse-text-colour;
  padding: 8px 0;
  border-bottom: 1px solid #d8dde0;
}

.app-status-bar a {
  color: $nhsuk-reverse-text-colour;

  &:hover,
  &:active {
    color: $nhsuk-reverse-text-colour;
  }
  &:focus {
    color: $nhsuk-text-colour;
  }
}

.app-status-bar__row {
  display: flex;
  flex-wrap: wrap;
  gap: 24px;
  align-items: center;
}

.app-status-bar__row + .app-status-bar__row {
  margin-top: 8px;
  padding-top: 8px;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.app-status-bar__item {
  display: flex;
  gap: 8px;
  align-items: center;
}

.app-status-bar__key {
  @include nhsuk-typography-weight-bold($important: true);
  opacity: 0.9;
}

is-sticky {
  display: block;
  position: sticky;
  top: 0;
  z-index: 999;
}

// Sass variables for header height calculations
$nav-height: 48px;
$status-bar-base-padding: 16px; // 8px top + 8px bottom
$status-bar-row-height: 32px; // Approximate row height
$status-bar-row-spacing: 16px; // 8px margin + 8px padding for borders

// Function to calculate header height for given number of rows
@function calculate-header-height($rows) {
  $spacing-multiplier: $rows - 1; // Number of border spacings needed
  @if $spacing-multiplier < 0 {
    $spacing-multiplier: 0;
  }
  @return $nav-height + $status-bar-base-padding + ($rows * $status-bar-row-height) +
    ($spacing-multiplier * $status-bar-row-spacing);
}

// Default scroll padding (fallback for 3 rows)
html {
  scroll-padding-top: #{calculate-header-height(3)};
}

// Generate classes for different row counts
@for $rowCount from 1 through 5 {
  html:has(.app-status-bar--rows-#{$rowCount}) {
    scroll-padding-top: #{calculate-header-height($rowCount)};
  }
}

// Alternative approach if :has() doesn't work - classes on html element
@for $rowCount from 1 through 5 {
  html.sticky-header-rows-#{$rowCount} {
    scroll-padding-top: #{calculate-header-height($rowCount)};
  }
}
